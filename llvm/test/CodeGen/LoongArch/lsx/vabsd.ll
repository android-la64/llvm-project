; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=loongarch64 -mattr=+lsx  < %s | FileCheck %s

define <16 x i8> @vabsd_b(<16 x i8> %a, <16 x i8> %b) {
; CHECK-LABEL: vabsd_b:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.b $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <16 x i8> %b, %a
  %subba = sub <16 x i8> %b, %a
  %subab = sub <16 x i8> %a, %b
  %select = select <16 x i1> %icmp, <16 x i8> %subba, <16 x i8> %subab
  ret <16 x i8> %select
}

define <8 x i16> @vabsd_h(<8 x i16> %a, <8 x i16> %b) {
; CHECK-LABEL: vabsd_h:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.h $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <8 x i16> %b, %a
  %subba = sub <8 x i16> %b, %a
  %subab = sub <8 x i16> %a, %b
  %select = select <8 x i1> %icmp, <8 x i16> %subba, <8 x i16> %subab
  ret <8 x i16> %select
}

define <8 x i8> @vabsd_h_v8i8(<8 x i8> %a, <8 x i8> %b) {
; CHECK-LABEL: vabsd_h_v8i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.h $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <8 x i8> %b, %a
  %subba = sub <8 x i8> %b, %a
  %subab = sub <8 x i8> %a, %b
  %select = select <8 x i1> %icmp, <8 x i8> %subba, <8 x i8> %subab
  ret <8 x i8> %select
}

define <4 x i32> @vabsd_w(<4 x i32> %a, <4 x i32> %b) {
; CHECK-LABEL: vabsd_w:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.w $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <4 x i32> %b, %a
  %subba = sub <4 x i32> %b, %a
  %subab = sub <4 x i32> %a, %b
  %select = select <4 x i1> %icmp, <4 x i32> %subba, <4 x i32> %subab
  ret <4 x i32> %select
}

define <4 x i16> @vabsd_w_v4i16(<4 x i16> %a, <4 x i16> %b) {
; CHECK-LABEL: vabsd_w_v4i16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.w $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <4 x i16> %b, %a
  %subba = sub <4 x i16> %b, %a
  %subab = sub <4 x i16> %a, %b
  %select = select <4 x i1> %icmp, <4 x i16> %subba, <4 x i16> %subab
  ret <4 x i16> %select
}

define <4 x i8> @vabsd_w_v4i8(<4 x i8> %a, <4 x i8> %b) {
; CHECK-LABEL: vabsd_w_v4i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.w $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <4 x i8> %b, %a
  %subba = sub <4 x i8> %b, %a
  %subab = sub <4 x i8> %a, %b
  %select = select <4 x i1> %icmp, <4 x i8> %subba, <4 x i8> %subab
  ret <4 x i8> %select
}

define <2 x i64> @vabsd_d(<2 x i64> %a, <2 x i64> %b) {
; CHECK-LABEL: vabsd_d:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.d $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <2 x i64> %b, %a
  %subba = sub <2 x i64> %b, %a
  %subab = sub <2 x i64> %a, %b
  %select = select <2 x i1> %icmp, <2 x i64> %subba, <2 x i64> %subab
  ret <2 x i64> %select
}

define <2 x i32> @vabsd_d_v2i32(<2 x i32> %a, <2 x i32> %b) {
; CHECK-LABEL: vabsd_d_v2i32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.d $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <2 x i32> %b, %a
  %subba = sub <2 x i32> %b, %a
  %subab = sub <2 x i32> %a, %b
  %select = select <2 x i1> %icmp, <2 x i32> %subba, <2 x i32> %subab
  ret <2 x i32> %select
}

define <2 x i16> @vabsd_d_v2i16(<2 x i16> %a, <2 x i16> %b) {
; CHECK-LABEL: vabsd_d_v2i16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.d $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <2 x i16> %b, %a
  %subba = sub <2 x i16> %b, %a
  %subab = sub <2 x i16> %a, %b
  %select = select <2 x i1> %icmp, <2 x i16> %subba, <2 x i16> %subab
  ret <2 x i16> %select
}

define <2 x i8> @vabsd_d_v2i8(<2 x i8> %a, <2 x i8> %b) {
; CHECK-LABEL: vabsd_d_v2i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.d $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <2 x i8> %b, %a
  %subba = sub <2 x i8> %b, %a
  %subab = sub <2 x i8> %a, %b
  %select = select <2 x i1> %icmp, <2 x i8> %subba, <2 x i8> %subab
  ret <2 x i8> %select
}

define <16 x i8> @vabsd_bu(<16 x i8> %a, <16 x i8> %b) {
; CHECK-LABEL: vabsd_bu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.bu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <16 x i8> %b, %a
  %subba = sub <16 x i8> %b, %a
  %subab = sub <16 x i8> %a, %b
  %select = select <16 x i1> %icmp, <16 x i8> %subba, <16 x i8> %subab
  ret <16 x i8> %select
}

define <8 x i16> @vabsd_hu(<8 x i16> %a, <8 x i16> %b) {
; CHECK-LABEL: vabsd_hu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.hu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <8 x i16> %b, %a
  %subba = sub <8 x i16> %b, %a
  %subab = sub <8 x i16> %a, %b
  %select = select <8 x i1> %icmp, <8 x i16> %subba, <8 x i16> %subab
  ret <8 x i16> %select
}

define <8 x i8> @vabsd_hu_v8i8(<8 x i8> %a, <8 x i8> %b) {
; CHECK-LABEL: vabsd_hu_v8i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.hu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <8 x i8> %b, %a
  %subba = sub <8 x i8> %b, %a
  %subab = sub <8 x i8> %a, %b
  %select = select <8 x i1> %icmp, <8 x i8> %subba, <8 x i8> %subab
  ret <8 x i8> %select
}

define <4 x i32> @vabsd_wu(<4 x i32> %a, <4 x i32> %b) {
; CHECK-LABEL: vabsd_wu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.wu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <4 x i32> %b, %a
  %subba = sub <4 x i32> %b, %a
  %subab = sub <4 x i32> %a, %b
  %select = select <4 x i1> %icmp, <4 x i32> %subba, <4 x i32> %subab
  ret <4 x i32> %select
}

define <4 x i16> @vabsd_wu_v4i16(<4 x i16> %a, <4 x i16> %b) {
; CHECK-LABEL: vabsd_wu_v4i16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.wu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <4 x i16> %b, %a
  %subba = sub <4 x i16> %b, %a
  %subab = sub <4 x i16> %a, %b
  %select = select <4 x i1> %icmp, <4 x i16> %subba, <4 x i16> %subab
  ret <4 x i16> %select
}

define <4 x i8> @vabsd_wu_v4i8(<4 x i8> %a, <4 x i8> %b) {
; CHECK-LABEL: vabsd_wu_v4i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.wu $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <4 x i8> %b, %a
  %subba = sub <4 x i8> %b, %a
  %subab = sub <4 x i8> %a, %b
  %select = select <4 x i1> %icmp, <4 x i8> %subba, <4 x i8> %subab
  ret <4 x i8> %select
}

define <2 x i64> @vabsd_du(<2 x i64> %a, <2 x i64> %b) {
; CHECK-LABEL: vabsd_du:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.du $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <2 x i64> %b, %a
  %subba = sub <2 x i64> %b, %a
  %subab = sub <2 x i64> %a, %b
  %select = select <2 x i1> %icmp, <2 x i64> %subba, <2 x i64> %subab
  ret <2 x i64> %select
}

define <2 x i32> @vabsd_du_v2i32(<2 x i32> %a, <2 x i32> %b) {
; CHECK-LABEL: vabsd_du_v2i32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.du $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <2 x i32> %b, %a
  %subba = sub <2 x i32> %b, %a
  %subab = sub <2 x i32> %a, %b
  %select = select <2 x i1> %icmp, <2 x i32> %subba, <2 x i32> %subab
  ret <2 x i32> %select
}

define <2 x i16> @vabsd_du_v2i16(<2 x i16> %a, <2 x i16> %b) {
; CHECK-LABEL: vabsd_du_v2i16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.du $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <2 x i16> %b, %a
  %subba = sub <2 x i16> %b, %a
  %subab = sub <2 x i16> %a, %b
  %select = select <2 x i1> %icmp, <2 x i16> %subba, <2 x i16> %subab
  ret <2 x i16> %select
}

define <2 x i8> @vabsd_du_v2i8(<2 x i8> %a, <2 x i8> %b) {
; CHECK-LABEL: vabsd_du_v2i8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vabsd.du $vr0, $vr1, $vr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <2 x i8> %b, %a
  %subba = sub <2 x i8> %b, %a
  %subab = sub <2 x i8> %a, %b
  %select = select <2 x i1> %icmp, <2 x i8> %subba, <2 x i8> %subab
  ret <2 x i8> %select
}
