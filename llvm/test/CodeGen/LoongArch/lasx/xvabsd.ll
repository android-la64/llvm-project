; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=loongarch64 -mattr=+lasx  < %s | FileCheck %s

define <32 x i8> @xvabsd_b(<32 x i8> %a, <32 x i8> %b) {
; CHECK-LABEL: xvabsd_b:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.b $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <32 x i8> %b, %a
  %subba = sub <32 x i8> %b, %a
  %subab = sub <32 x i8> %a, %b
  %select = select <32 x i1> %icmp, <32 x i8> %subba, <32 x i8> %subab
  ret <32 x i8> %select
}

define <16 x i16> @xvabsd_h(<16 x i16> %a, <16 x i16> %b) {
; CHECK-LABEL: xvabsd_h:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.h $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <16 x i16> %b, %a
  %subba = sub <16 x i16> %b, %a
  %subab = sub <16 x i16> %a, %b
  %select = select <16 x i1> %icmp, <16 x i16> %subba, <16 x i16> %subab
  ret <16 x i16> %select
}

define <8 x i32> @xvabsd_w(<8 x i32> %a, <8 x i32> %b) {
; CHECK-LABEL: xvabsd_w:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.w $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <8 x i32> %b, %a
  %subba = sub <8 x i32> %b, %a
  %subab = sub <8 x i32> %a, %b
  %select = select <8 x i1> %icmp, <8 x i32> %subba, <8 x i32> %subab
  ret <8 x i32> %select
}

define <4 x i64> @xvabsd_d(<4 x i64> %a, <4 x i64> %b) {
; CHECK-LABEL: xvabsd_d:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.d $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp sgt <4 x i64> %b, %a
  %subba = sub <4 x i64> %b, %a
  %subab = sub <4 x i64> %a, %b
  %select = select <4 x i1> %icmp, <4 x i64> %subba, <4 x i64> %subab
  ret <4 x i64> %select
}

define <32 x i8> @xvabsd_bu(<32 x i8> %a, <32 x i8> %b) {
; CHECK-LABEL: xvabsd_bu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.bu $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <32 x i8> %b, %a
  %subba = sub <32 x i8> %b, %a
  %subab = sub <32 x i8> %a, %b
  %select = select <32 x i1> %icmp, <32 x i8> %subba, <32 x i8> %subab
  ret <32 x i8> %select
}

define <16 x i16> @xvabsd_hu(<16 x i16> %a, <16 x i16> %b) {
; CHECK-LABEL: xvabsd_hu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.hu $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <16 x i16> %b, %a
  %subba = sub <16 x i16> %b, %a
  %subab = sub <16 x i16> %a, %b
  %select = select <16 x i1> %icmp, <16 x i16> %subba, <16 x i16> %subab
  ret <16 x i16> %select
}

define <8 x i32> @xvabsd_wu(<8 x i32> %a, <8 x i32> %b) {
; CHECK-LABEL: xvabsd_wu:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.wu $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <8 x i32> %b, %a
  %subba = sub <8 x i32> %b, %a
  %subab = sub <8 x i32> %a, %b
  %select = select <8 x i1> %icmp, <8 x i32> %subba, <8 x i32> %subab
  ret <8 x i32> %select
}

define <4 x i64> @xvabsd_du(<4 x i64> %a, <4 x i64> %b) {
; CHECK-LABEL: xvabsd_du:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    xvabsd.du $xr0, $xr1, $xr0
; CHECK-NEXT:    jr $ra
entry:
  %icmp = icmp ugt <4 x i64> %b, %a
  %subba = sub <4 x i64> %b, %a
  %subab = sub <4 x i64> %a, %b
  %select = select <4 x i1> %icmp, <4 x i64> %subba, <4 x i64> %subab
  ret <4 x i64> %select
}
