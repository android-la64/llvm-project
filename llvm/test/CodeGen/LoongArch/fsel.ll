; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=loongarch64 -o - %s | FileCheck %s


define double @olt_f64(double %a, double %b) {
; CHECK-LABEL: olt_f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fcmp.clt.d $fcc0, $f0, $f1
; CHECK-NEXT:    fsel $f0, $f1, $f0, $fcc0
; CHECK-NEXT:    jr $ra
  %cond = fcmp olt double %a, %b
  %ret = select i1 %cond, double %a, double %b
  ret double %ret
}

define double @ogt_f64(double %a, double %b) {
; CHECK-LABEL: ogt_f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fcmp.cule.d $fcc0, $f0, $f1
; CHECK-NEXT:    fsel $f0, $f0, $f1, $fcc0
; CHECK-NEXT:    jr $ra
  %cond = fcmp ogt double %a, %b
  %ret = select i1 %cond, double %a, double %b
  ret double %ret
}

define float @olt_f32(float %a, float %b) {
; CHECK-LABEL: olt_f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fcmp.clt.s $fcc0, $f0, $f1
; CHECK-NEXT:    fsel $f0, $f1, $f0, $fcc0
; CHECK-NEXT:    jr $ra
  %cond = fcmp olt float %a, %b
  %ret = select i1 %cond, float %a, float %b
  ret float %ret
}

define float @ogt_f32(float %a, float %b) {
; CHECK-LABEL: ogt_f32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    fcmp.cule.s $fcc0, $f0, $f1
; CHECK-NEXT:    fsel $f0, $f0, $f1, $fcc0
; CHECK-NEXT:    jr $ra
  %cond = fcmp ogt float %a, %b
  %ret = select i1 %cond, float %a, float %b
  ret float %ret
}
