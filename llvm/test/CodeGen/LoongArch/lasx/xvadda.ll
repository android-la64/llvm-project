; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=loongarch64 -mattr=+lasx  < %s | FileCheck %s

define <32 x i8> @xvaddab(<32 x i8>, <32 x i8>) {
; CHECK-LABEL: xvaddab:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xvadda.b $xr0, $xr0, $xr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <32 x i8> %0, zeroinitializer
  %4 = sub <32 x i8> zeroinitializer, %0
  %5 = select <32 x i1> %3, <32 x i8> %4, <32 x i8> %0
  %6 = icmp slt <32 x i8> %1, zeroinitializer
  %7 = sub <32 x i8> zeroinitializer, %1
  %8 = select <32 x i1> %6, <32 x i8> %7, <32 x i8> %1
  %9 = add <32 x i8> %5, %8
  ret <32 x i8> %9
}

define <16 x i16> @xvaddah(<16 x i16>, <16 x i16>) {
; CHECK-LABEL: xvaddah:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xvadda.h $xr0, $xr0, $xr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <16 x i16> %0, zeroinitializer
  %4 = sub <16 x i16> zeroinitializer, %0
  %5 = select <16 x i1> %3, <16 x i16> %4, <16 x i16> %0
  %6 = icmp slt <16 x i16> %1, zeroinitializer
  %7 = sub <16 x i16> zeroinitializer, %1
  %8 = select <16 x i1> %6, <16 x i16> %7, <16 x i16> %1
  %9 = add <16 x i16> %5, %8
  ret <16 x i16> %9
}

define <8 x i32> @xvaddaw(<8 x i32>, <8 x i32>) {
; CHECK-LABEL: xvaddaw:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xvadda.w $xr0, $xr0, $xr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <8 x i32> %0, zeroinitializer
  %4 = sub nsw <8 x i32> zeroinitializer, %0
  %5 = select <8 x i1> %3, <8 x i32> %4, <8 x i32> %0
  %6 = icmp slt <8 x i32> %1, zeroinitializer
  %7 = sub nsw <8 x i32> zeroinitializer, %1
  %8 = select <8 x i1> %6, <8 x i32> %7, <8 x i32> %1
  %9 = add nuw nsw <8 x i32> %5, %8
  ret <8 x i32> %9
}

define <4 x i64> @xvaddad(<4 x i64>, <4 x i64>) {
; CHECK-LABEL: xvaddad:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xvadda.d $xr0, $xr0, $xr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <4 x i64> %0, zeroinitializer
  %4 = sub nsw <4 x i64> zeroinitializer, %0
  %5 = select <4 x i1> %3, <4 x i64> %4, <4 x i64> %0
  %6 = icmp slt <4 x i64> %1, zeroinitializer
  %7 = sub nsw <4 x i64> zeroinitializer, %1
  %8 = select <4 x i1> %6, <4 x i64> %7, <4 x i64> %1
  %9 = add nuw nsw <4 x i64> %5, %8
  ret <4 x i64> %9
}
