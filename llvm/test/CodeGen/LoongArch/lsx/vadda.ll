; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=loongarch64 -mattr=+lsx  < %s | FileCheck %s

define <16 x i8> @vaddab(<16 x i8>, <16 x i8>) {
; CHECK-LABEL: vaddab:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vadda.b $vr0, $vr0, $vr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <16 x i8> %0, zeroinitializer
  %4 = sub <16 x i8> zeroinitializer, %0
  %5 = select <16 x i1> %3, <16 x i8> %4, <16 x i8> %0
  %6 = icmp slt <16 x i8> %1, zeroinitializer
  %7 = sub <16 x i8> zeroinitializer, %1
  %8 = select <16 x i1> %6, <16 x i8> %7, <16 x i8> %1
  %9 = add <16 x i8> %5, %8
  ret <16 x i8> %9
}

define <8 x i16> @vaddah(<8 x i16>, <8 x i16>) {
; CHECK-LABEL: vaddah:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vadda.h $vr0, $vr0, $vr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <8 x i16> %0, zeroinitializer
  %4 = sub <8 x i16> zeroinitializer, %0
  %5 = select <8 x i1> %3, <8 x i16> %4, <8 x i16> %0
  %6 = icmp slt <8 x i16> %1, zeroinitializer
  %7 = sub <8 x i16> zeroinitializer, %1
  %8 = select <8 x i1> %6, <8 x i16> %7, <8 x i16> %1
  %9 = add <8 x i16> %5, %8
  ret <8 x i16> %9
}

define <4 x i32> @vaddaw(<4 x i32>, <4 x i32>) {
; CHECK-LABEL: vaddaw:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vadda.w $vr0, $vr0, $vr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <4 x i32> %0, zeroinitializer
  %4 = sub nsw <4 x i32> zeroinitializer, %0
  %5 = select <4 x i1> %3, <4 x i32> %4, <4 x i32> %0
  %6 = icmp slt <4 x i32> %1, zeroinitializer
  %7 = sub nsw <4 x i32> zeroinitializer, %1
  %8 = select <4 x i1> %6, <4 x i32> %7, <4 x i32> %1
  %9 = add nuw nsw <4 x i32> %5, %8
  ret <4 x i32> %9
}

define <2 x i64> @vaddad(<2 x i64>, <2 x i64>) {
; CHECK-LABEL: vaddad:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vadda.d $vr0, $vr0, $vr1
; CHECK-NEXT:    jr $ra
  %3 = icmp slt <2 x i64> %0, zeroinitializer
  %4 = sub nsw <2 x i64> zeroinitializer, %0
  %5 = select <2 x i1> %3, <2 x i64> %4, <2 x i64> %0
  %6 = icmp slt <2 x i64> %1, zeroinitializer
  %7 = sub nsw <2 x i64> zeroinitializer, %1
  %8 = select <2 x i1> %6, <2 x i64> %7, <2 x i64> %1
  %9 = add nuw nsw <2 x i64> %5, %8
  ret <2 x i64> %9
}
